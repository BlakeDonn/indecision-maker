{"version":3,"sources":["Components/ActivityCards/ActivityCards.js","Components/HomePage/Homepage.js","apiCalls.js","Components/Form/Form.js","Components/BrowsePage/BrowsePage.js","Components/Footer/Footer.js","Components/ResultPage/ResultPage.js","Components/DetailPage/DetailsPage.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["ActivityCards","className","Homepage","props","id","name","onClick","getActivityData","to","getAllMovies","a","fetch","response","ok","json","error","getAllBoardGames","getAllCardGames","getAllMusic","getAllPodcasts","getAllQuestions","Form","componentDidMount","prompts","setState","setHistory","history","state","goBack","event","preventDefault","length","updateCurrentAnswers","questionData","currentAnswers","includes","target","textContent","answersPerQuestion","index","indexOf","splice","allowedResponses","find","answer","choices","choiceToSwap","indexToReplace","answerToReplace","updateActivityAnswers","updateAllAnswers","window","scrollTo","allAnswers","setActivities","activitySet","handleBothGames","relevantQuestions","determineRelevantQuestions","questionsPerActivity","checkForAllQuestions","reduce","activity","filteredQuestions","filter","question","questionsByActivity","questions","push","sort","b","slice","determinePrompt","data","map","choice","i","answerType","e","value","showQuestion","activities","unansweredSet","set","every","some","handleSubmission","determineRandomActivity","route","showCurrentAnswers","determineNextOrSubmit","button","undefined","resetState","this","Component","BrowsePage","activityInformation","image_poster","image_100","image","src","alt","song_title","podcast_title","instructions","title","Footer","href","ResultPage","activityGallery","album_title","podcast_name","artist","materials","release_date","author","genre","average_time","number_of_players","type","randomActivity","content_rating","imdb_raiting","DetailsPage","description","controls","width","height","url","video","episode_count","imdb_rating","album_url","brief_description","moment","format","App","replace","promise","console","log","baseState","forEach","final","filtered","filteredActivities","filterActivity","flat","randomNumber","Math","floor","random","genreFilter","answers","singleActivity","ageFilter","possibleSuggestions","ageRestriction","element","split","movieFilter","runtime","gameFilter","numberOfPlayers","max_players","min_players","cardGames","boardGames","cardGamesAnswers","musicAnswers","moviesAnswers","podcastsAnswers","boardGamesAnswers","movies","music","podcasts","exact","path","allMovies","render","match","params","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b082cc6.chunk.js","sourcesContent":["import React from 'react'\nimport { RiMovie2Line , RiMusic2Line} from \"react-icons/ri\";\nimport { FaPodcast, FaChessKnight} from \"react-icons/fa\";\nimport { CgCardHearts } from \"react-icons/cg\";\nimport './ActivityCards.scss'\nexport const ActivityCards = () => {\n    return (\n        <div className='activities-info'>\n\n            <div className=\"activity-container\">\n\n                <div className=\"inner-activity-container\">\n                  <i className=\"activity-icon\"> <RiMovie2Line className=\"icon\"/> </i>\n                  <h1 className=\"activity-name\">Movies</h1>\n                  <h3 className=\"activity-legend\">be ready!</h3>\n                  <p className=\"quote\">\"I'm going to make him an offer he can't refuse.\"</p>\n                  <p className=\"quote-by\"> - The Godfather, 1972</p>\n                </div>\n\n                <div className=\"inner-activity-container\">\n                  <i className=\"activity-icon\"> <RiMusic2Line className=\"icon\"/> </i>\n                  <h1 className=\"activity-name\">Music</h1>\n                  <h3 className=\"activity-legend\">be ready!</h3>\n                  <p className=\"quote\">“Music is the language of the spirit. It opens the secret of life bringing peace, abolishing strife.”</p>\n                  <p className=\"quote-by\">– Kahlil Gibran</p>\n                </div>\n\n                <div className=\"inner-activity-container\">\n                  <i className=\"activity-icon\"> <FaPodcast className=\"icon\"/> </i>\n                  <h1 className=\"activity-name\">Podcast</h1>\n                  <h3 className=\"activity-legend\">be ready!</h3>\n                  <p className=\"quote\">\"Don't bore people. Don't worry too much about replicating someone else's formula. Be original with the way you podcast.\" -</p>\n                  <p className=\"quote-by\">- James Schramko </p>\n                </div>\n\n                <div className=\"inner-activity-container\">\n                  <i className=\"activity-icon\"> <CgCardHearts className=\"icon\"/> </i>\n                  <h1 className=\"activity-name\">Card Games</h1>\n                  <h3 className=\"activity-legend\">be ready!</h3>\n                  <p className=\"quote\"> Life is not a matter of holding good cards, but sometimes, playing a poor hand well.</p>\n                  <p className=\"quote-by\">– Jack London</p>\n                </div>\n\n                <div className=\"inner-activity-container\">\n                  <i className=\"activity-icon\"> <FaChessKnight className=\"icon\"/> </i>\n                  <h1 className=\"activity-name\">Board Games</h1>\n                  <h3 className=\"activity-legend\">be ready!</h3>\n                  <p className=\"quote\">“A man can learn all of an opponent's weaknesses on that board,' said Gilt.\n                  'Really?' said Vetinari, raising his eyebrows. 'Should not he be trying to learn his own?”</p>\n                  <p className=\"quote-by\">― Terry Pratchett, Going Postal</p>\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport './Homepage.scss'\nimport {ActivityCards} from '../ActivityCards/ActivityCards'\nimport {CgUserlane} from \"react-icons/cg\";\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\nexport const Homepage = (props) => {\n  return (\n    <div className='homepage-container'>\n      <div className=\"homepage-inner-container\">\n        <div className=\"app-logo\">\n          <CgUserlane className=\"logo\" />\n        </div>\n        <nav className=\"nav-bar\">\n          <ul className=\"nav-links\">\n            <Link\n              id=\"movies\"\n              name=\"movies\"\n              className=\"link\"\n              onClick={props.getActivityData}\n              to=\"/movies\">\n              <li\n                id=\"movies\"\n                name=\"movies\"\n              >Movies</li>\n            </Link>\n            <Link\n              id=\"music\"\n              className=\"link\"\n              onClick={props.getActivityData}\n              to=\"/music\">\n              <li\n                id=\"music\"\n                name=\"music\"\n              >Music</li>\n            </Link>\n            <Link\n              id=\"cardGames\"\n              className=\"link\"\n              onClick={props.getActivityData}\n              to=\"/cardGames\">\n              <li\n                id=\"cardGames\"\n                name=\"cardGames\"\n              >Card Games</li>\n            </Link>\n            <Link\n              id=\"podcasts\"\n              className=\"link\"\n              onClick={props.getActivityData}\n              to=\"/podcasts\">\n              <li\n                id=\"podcasts\"\n                name=\"podcasts\"\n              >Podcasts</li>\n            </Link>\n            <Link\n              id=\"boardGames\"\n              className=\"link\"\n              onClick={props.getActivityData}\n              to=\"/boardGames\">\n              <li\n                id=\"boardGames\"\n                name=\"boardGames\"\n              >Board Games</li>\n            </Link>\n          </ul>\n        </nav>\n        <h1 className=\"app-title1\">Indecision</h1>\n        <h1 className=\"app-title2\">maker</h1>\n        <p className=\"intro\">Thus, our indecision may lie in our fears and doubts about the outcomes of our decisions or about the process of decision-making: </p>\n        <Link to='/form' className=\"find-activitty-container\">\n          <button className=\"find-button\">find activity</button>\n        </Link>\n      </div>\n      <ActivityCards />\n      <section className=\"team-section\">\n        <h1 className=\"team-title\">What activities interest you?</h1>\n        <div className=\"team-container\">\n          <p className=\"desc description3\">Music</p>\n          <div className=\" dev developer-card1\">\n            <div className=\"border\"></div>\n          </div>\n          <p className=\"desc description2\">Maybe?</p>\n          <div className=\"dev developer-card2\">\n            <div className=\"border\"></div></div>\n          <p className=\"desc description1\">Games</p>\n          <div className=\"dev developer-card3\">\n            <div className=\"border\"></div>\n          </div>\n        </div>\n      </section>\n    </div>\n  )\n}\n\nHomepage.propTypes = {\n  getActivityData: PropTypes.func.isRequired,\n  allMovies: PropTypes.array.isRequired\n}\n","export const getAllMovies = async () => {\n  const response = await fetch('https://indecision-maker.herokuapp.com/api/v1/movies')\n  if (response.ok) {\n    return await response.json()\n  } else {\n    return response.error\n  }\n}\n\nexport const getMoviesByGenre = async (genre) => {\n  const response = await fetch(`https://indecision-maker.herokuapp.com/api/v1/movies/${genre}`)\n  if (response.ok) {\n    return await response.json()\n  } else {\n    return response.error\n  }\n}\n\nexport const getAllBoardGames = async () => {\n  const response = await fetch('https://indecision-maker.herokuapp.com/api/v1/boardgames')\n  if (response.ok) {\n    return await response.json()\n  } else {\n    return response.error\n  }\n}\n\nexport const getAllCardGames = async () => {\n  const response = await fetch('https://indecision-maker.herokuapp.com/api/v1/cardgames')\n  if (response.ok) {\n    return await response.json()\n  } else {\n    return response.error\n  }\n}\n\nexport const getAllMusic = async () => {\n  const response = await fetch('https://indecision-maker.herokuapp.com/api/v1/music')\n  if (response.ok) {\n    return await response.json()\n  } else {\n    return response.error\n  }\n}\n\nexport const getMusicByGenre = async (genre) => {\n  const response = await fetch(`https://indecision-maker.herokuapp.com/api/v1/music/${genre}`)\n  if (response.ok) {\n    return await response.json()\n  } else {\n    return response.error\n  }\n}\n\nexport const getAllPodcasts = async () => {\n  const response = await fetch('https://indecision-maker.herokuapp.com/api/v1/podcasts')\n  if (response.ok) {\n    return await response.json()\n  } else {\n    return response.error\n  }\n}\n\nexport const getPodcastsByGenre = async (genre) => {\n  const response = await fetch(`https://indecision-maker.herokuapp.com/api/v1/podcasts/${genre}`)\n  if (response.ok) {\n    return await response.json()\n  } else {\n    return response.error\n  }\n}\n\nexport const getAllQuestions = async () => {\n  const response = await fetch('https://indecision-maker.herokuapp.com/api/v1/questions')\n  if (response.ok) {\n    return await response.json()\n  } else {\n    return response.error\n  }\n}\n","import React, { Component } from \"react\";\nimport { getAllQuestions } from \"../../apiCalls\";\nimport \"./Form.scss\";\nimport { RiHomeSmileLine } from \"react-icons/ri\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { CgUserlane } from \"react-icons/cg\";\n\nexport class Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: \"\",\n      history: [],\n      prompts: [],\n      allAnswers: [],\n      currentAnswers: [],\n      questionsPerActivity: [],\n    };\n  }\n\n  componentDidMount = async () => {\n    this.setState({ prompts: await getAllQuestions() });\n  };\n\n  setHistory = () => {\n    this.setState({ history: [...this.state.history, this.state] });\n    this.props.setHistory();\n  };\n\n  goBack = (event) => {\n    event.preventDefault();\n    this.setState(this.state.history[this.state.history.length - 1]);\n    this.props.goBack();\n  };\n\n  updateCurrentAnswers = (event, questionData) => {\n    event.preventDefault();\n    if (this.state.currentAnswers.includes(event.target.textContent)) {\n      const answersPerQuestion = [...this.state.currentAnswers];\n      const index = this.state.currentAnswers.indexOf(event.target.textContent);\n      answersPerQuestion.splice(index, 1);\n      return this.setState({ currentAnswers: answersPerQuestion });\n    }\n    if (\n      +questionData.allowedResponses &&\n      this.state.currentAnswers.find((answer) =>\n        questionData.choices.includes(answer)\n      )\n    ) {\n      let choiceToSwap = this.state.currentAnswers.find((answer) =>\n        questionData.choices.includes(answer)\n      );\n      let indexToReplace = this.state.currentAnswers.indexOf(choiceToSwap);\n      let answerToReplace = this.state.currentAnswers;\n      answerToReplace.splice(indexToReplace, 1, event.target.textContent);\n      if (answerToReplace) {\n        return this.setState({ currentAnswers: answerToReplace });\n      }\n    } else {\n      this.setState({currentAnswers: [...this.state.currentAnswers, event.target.textContent]});\n    }\n    this.props.updateActivityAnswers(event);\n    this.setState({currentAnswers: [...this.state.currentAnswers, event.target.textContent]});\n  };\n\n  updateAllAnswers = async (event) => {\n    event.preventDefault();\n    window.scrollTo(0,0);\n    this.setHistory();\n    if (this.state.allAnswers.length === 0) {\n      if (this.state.currentAnswers.length === 0) {\n        return this.setState({ error: \"Please select an activity\" });\n      }\n      await this.setState({\n        allAnswers: [...this.state.allAnswers, this.state.currentAnswers],\n        currentAnswers: [],\n        error: \"\"\n      });\n      this.props.setActivities(this.state.allAnswers[0]);\n      let activitySet = this.handleBothGames();\n      let relevantQuestions = this.determineRelevantQuestions(activitySet);\n      return this.setState({ questionsPerActivity: [...relevantQuestions] });\n    }\n    if (this.checkForAllQuestions()){\n      return this.setState({\n        allAnswers: [...this.state.allAnswers, this.state.currentAnswers],\n        currentAnswers: [],\n        error: \"\",\n      });\n    } else {\n      return this.setState({error: \"Please select at least one option for each question\"});\n    }\n  };\n\n  determineRelevantQuestions = (activitySet) => {\n    return activitySet.reduce((relevantQuestions, activity) => {\n      let filteredQuestions = this.state.prompts.filter((question) => {\n        return question.activity === activity;\n      });\n      let questionsByActivity = {\n        activity: activity,\n        questions: filteredQuestions,\n      };\n      relevantQuestions.push(questionsByActivity);\n      return relevantQuestions;\n    }, []);\n  };\n\n  handleBothGames = () => {\n    if (\n      this.state.allAnswers[0].includes(\"card games\") &&\n      this.state.allAnswers[0].includes(\"board games\")\n    ) {\n      let filteredSet = this.state.allAnswers[0].sort((a, b) => {\n        return a > b ? -1 : 1;\n      });\n      return filteredSet.slice(0, -1);\n    }\n    return this.state.allAnswers[0];\n  };\n\n  determinePrompt = (index, data) => {\n    return (\n      <article className=\"form-container\">\n        <h2 className=\"question\">{data[index].question}</h2>\n        <div className=\"possible-answers\">\n          {data[index].choices.map((choice, i) => {\n            return (\n              <div key={i} className=\"choice\">\n                <h3    \n                  id={data[index].answerType}\n                  onClick={(e) => {\n                    this.updateCurrentAnswers(e, data[index]);\n                  }}\n                  value={choice}\n                  className=\"option\">\n                  {choice}\n                </h3>\n              </div>\n            );\n          })}\n        </div>\n      </article>\n    );\n  };\n\n  showQuestion = () => {\n    if (!this.props.activities.length && !this.state.allAnswers.length) {\n      return this.determinePrompt(0, this.state.prompts);\n    }\n    if (this.state.questionsPerActivity.length) {\n      let unansweredSet = this.state.questionsPerActivity.find((set) => {\n        return (\n          this.state.allAnswers[0][this.state.allAnswers.length - 1] === set.activity\n        );\n      });\n      return unansweredSet.questions.map((question, i) => {\n        return this.determinePrompt(i, unansweredSet.questions);\n      });\n    }\n  };\n\n  checkForAllQuestions = () => {\n    let index = this.state.allAnswers.length - 1;\n    return this.state.questionsPerActivity[index].questions.every(\n      (question) => {\n        return this.state.currentAnswers.some((answer) =>\n          question.choices.includes(answer)\n        );\n      }\n    );\n  };\n\n  handleSubmission = (event) => {\n    event.preventDefault();\n    if (this.checkForAllQuestions()) {\n      this.props.determineRandomActivity()\n      return (this.props.route.push(\"/activity/results\"))\n    } else {\n      return this.setState({error: \"Please select at least one option for each question\"});\n    }\n  };\n\n  showCurrentAnswers = () => {\n    return this.state.currentAnswers.map((answer, i) => {\n      return (\n        <h3 key={i} className=\"current-answer\">{answer}</h3>\n      )\n    })\n  }\n  \n  determineNextOrSubmit = () => {\n    let button;\n    if (this.state.allAnswers.length === 0) {\n      return (\n        <button onClick={this.updateAllAnswers} className=\"next-button form-button\">next</button>\n      );\n    }\n    if (this.state.allAnswers.length === this.state.questionsPerActivity.length) {\n      return (\n        <button onClick={this.handleSubmission} className=\"submit-button form-button\">submit</button>\n      );\n    }\n    if (this.state.questionsPerActivity && button === undefined) {\n      button = (\n        <button onClick={this.updateAllAnswers} className=\"next-button form-button\">next</button>\n      );\n    }\n    return button;\n  };\n\n  render() {\n    return (\n      <form className=\"question-form\">\n        <div className=\"bar-menu\">\n          <CgUserlane className=\"logo\" />\n          <Link \n            to=\"/\" \n            onClick={() => this.props.resetState()}>\n            <RiHomeSmileLine className=\"logo\" />\n          </Link>\n        </div>\n        <div className=\"form-container\">\n          {this.state.prompts.length && this.showQuestion()}\n        </div>\n        <div className=\"picks-title-container\">\n          <h4 className=\"picks-title\">Your picks!</h4>\n        </div>\n        <div className=\"user-picks-container\">{this.showCurrentAnswers()}</div>\n        <h3>{this.state.error}</h3>\n        <div className=\"form-controls\">\n          <button \n            className=\"back-button form-button\" \n            onClick={this.goBack}>\n            back\n          </button>\n          {this.determineNextOrSubmit()}\n        </div>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  route: PropTypes.object,\n  goBack: PropTypes.func.isRequired,\n  setHistory: PropTypes.func.isRequired,\n  resetState: PropTypes.func.isRequired,\n  activities: PropTypes.array.isRequired,\n  setActivities: PropTypes.func.isRequired,\n  updateActivityAnswers: PropTypes.func.isRequired,\n  determineRandomActivity: PropTypes.func.isRequired\n}\n","import React from 'react'\nimport './BrowsePage.scss'\nimport { CgUserlane } from \"react-icons/cg\";\nimport { RiHomeSmileLine } from \"react-icons/ri\";\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport const BrowsePage = (props) => {\n    const activityInformation =\n        props.data.map((e, i) => {\n            return (\n                <li key ={i}className=\"hexa\">\n                    <div className=\"inner-hexagon\">\n                        {(e.image_poster || e.image_100 || e.image) && <img className=\"hexa-image\" \n                        src={e.image_poster || e.image_100 || e.image}\n                        alt={e.song_title || e.podcast_title || e.name}\n                        />}\n                    {e.name && <h1 className={e.name.length  < 20 ? \"title\" : \"large-title\"}>{e.name }</h1>}\n                    {e.instructions && <h1 className='title-copy'>{e.name }</h1>}\n                    {e.podcast_title && <h1 className={e.podcast_title.length  < 20 ? \"title\": \"large-title\"}>{e.podcast_title }</h1>}\n                    {e.song_title && <h1 className={e.song_title.length  < 20 ? \"title\" : \"large-title\"}>{e.song_title }</h1>}\n                    {e.title && <h1 className={e.title.length  < 20 ? \"title\" : \"large-title\"}>{e.title }</h1>}\n                    </div>\n                </li>\n          )\n        })\n    \n  return (\n    <section className=\"movies-section\">\n        <div className=\"bar-menu\">\n          <CgUserlane className=\"logo\"/>\n          <Link to='/'>\n            <RiHomeSmileLine className=\"logo\"/>\n          </Link>\n        </div>\n        <div className=\"title-container\">\n            <h1 className=\"title\">{props.name}</h1>\n        </div>\n        <article className=\"grid-container\">\n            <ul className=\"inner-grid\">\n                {activityInformation}\n            </ul>\n        </article>\n    </section>\n  )\n}\n\nBrowsePage.propTypes = {\n  name: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired\n}\n","import React from 'react'\nimport './Footer.scss'\nimport { FaServer, FaGithub} from \"react-icons/fa\";\n\nexport const Footer = () => {\n    return ( \n          <footer className=\"social-section\">\n            <ul className=\"footer-links\">\n              <li className=\"foot-link\">\n                <a target=\"_blank\" href=\"https://github.com/Atos20/indecision-maker-server\">\n                  <FaServer className=\"repo-link\"/>\n                </a>\n              </li>\n              <li className=\"foot-link\">\n                <a target=\"_blank\" href=\"https://github.com/nicolegooden/indecision-maker\">\n                  <FaGithub className=\"repo-link\"/>\n                </a>\n              </li>\n            </ul>\n            <p className=\"copy-rights\">Ⓒ Indecision Maker is a product of Nicole, Blake and Orlando's Inc.</p>\n          </footer>    \n    )\n}\n","import React from 'react';\nimport './ResultPage.scss';\nimport { CgUserlane } from \"react-icons/cg\";\nimport { RiHomeSmileLine } from \"react-icons/ri\";\nimport { FaLightbulb } from \"react-icons/fa\";\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const ResultPage = (props) => {\n  const noImage = \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/600px-No_image_available.svg.png\"\n  const activityGallery = \n    props.data.map((activity, i) => {\n    return (\n      <div key={i}className=\"inner-all-rest\">\n        <div className=\"border\">\n          <FaLightbulb className=\"bulb-icon\"/>\n          <h3 className=\"title\">{\n             activity.podcast_title \n            || activity.song_title \n            || activity.album_title \n            || activity.title \n            || activity.name\n            || \"no information\"}\n          </h3>\n          <h3 className=\"title\">{\n               activity.podcast_name\n            || activity.artist\n            || activity.materials\n            || \"no information available\"\n            }\n          </h3>\n          <h3 className=\"title\">{\n               activity.release_date\n            || activity.author\n            || activity.materials\n            || \"no information available\"\n            }\n          </h3>\n          <h3 className=\"title\">{\n               activity.genre\n            || activity.average_time\n            || activity.number_of_players\n            || activity.type\n            || \"no information available\"\n            }\n          </h3>\n        </div>\n      </div>\n    )\n  })\n\n    return (\n        <section className=\"result-container\">\n            <Link to=\"/\" className=\"home-logo\">\n              <RiHomeSmileLine className=\" logo\" />\n            </Link>\n          <div className=\"app-logo\">\n            <CgUserlane className=\"logo\" />\n          </div>\n          {!props.error ? <h1 className=\"message\">Finally, here is a suggestion for you!</h1> : \n          <h1 className=\"message\">{props.error}</h1>}\n          <div className=\"slider\">\n            <h1 className=\"activity-title\">{\n              !props.randomActivity ?  \"no information\":\n              props.randomActivity.podcast_title\n              || props.randomActivity.song_title\n              || props.randomActivity.title \n              || props.randomActivity.name}\n            </h1>\n            <h2 className=\"activity-title\">{\n              !props.randomActivity ? \"no information available\" :\n                props.randomActivity.podcast_name\n              || props.randomActivity.artist\n              || props.randomActivity.materials\n              || props.randomActivity.content_rating}\n            </h2>\n           <h2 className=\"activity-title\">{\n                props.randomActivity.imdb_raiting\n            }</h2>\n            <div className=\"slides\">\n                <div className=\"slide\" id=\"slide-1\">\n                    <img className=\"image\" \n                        src={props.randomActivity.image_poster \n                        || props.randomActivity.image_100 \n                        || props.randomActivity.image \n                        || noImage} \n                        alt=\"\"/>\n                </div>\n            </div>\n          </div>\n           <div className=\"activity-controls\">\n           {!props.error && <Link \n             to={\n               `/about/${props.randomActivity.song_title\n              || props.randomActivity.title \n              || props.randomActivity.podcast_title \n              || props.randomActivity.name\n              }/details`\n              }>\n             <button className=\"button pick-activity\">Choose me!</button>\n          </Link>}\n            <button \n              onClick={props.determineRandomActivity}\n              className=\"button skip-activity\">{!props.error ? \"skip\" : \"back\"}</button>\n          </div>\n          <div className=\"the-rest-container\">\n           {activityGallery}\n          </div>\n          <div className=\"more-suggestions\">\n            <h5 className=\"simmilar-picks\">Similar picks</h5>\n          </div>\n        </section>\n    )\n}\n\nResultPage.propTypes = {\n  name: PropTypes.object.isRequired,\n  data: PropTypes.array.isRequired,\n  randomActivity: PropTypes.object,\n  determineRandomActivity: PropTypes.func.isRequired,\n  error: PropTypes.string\n}","import React from 'react'\nimport './DetailsPage.scss'\nimport { CgUserlane } from \"react-icons/cg\";\nimport { RiHomeSmileLine } from \"react-icons/ri\";\nimport { Link } from 'react-router-dom';\nimport ReactPlayer from 'react-player'\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nexport const DetailsPage = (props) => {\n  const noImage = \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/600px-No_image_available.svg.png\"\n    return (\n        <div className=\"details-container\">\n          <div className=\"bar-menu\">\n            <CgUserlane className=\"logo\"/>\n            <h1 className=\"details-title\">All you need to know.</h1>\n            <Link to='/'>\n              <RiHomeSmileLine className=\"logo\"/>\n            </Link>\n          </div>\n          <div className=\"info activity-title\">\n            <h1 className=\"\">{\n               props.randomActivity.song_title \n            || props.randomActivity.title \n            || props.randomActivity.podcast_title \n            || props.randomActivity.podcast_name\n            || props.randomActivity.name\n            || \"more info soon...\"}</h1>\n          </div>\n          <div className=\"info activity-information\">\n            <div className=\"image-container\">\n              {props.randomActivity.image_poster \n              || props.randomActivity.image_100 || \n              props.randomActivity.image ? \n              <img \n              src={props.randomActivity.image_poster \n                  || props.randomActivity.image_100 \n                  || props.randomActivity.image \n                  || noImage\n                  } alt={\n                    props.randomActivity.description\n                  }/> :\n            <div className=\"image-container\" >\n              <ReactPlayer\n                alt=\"movie trailer\"\n                controls={true}\n                width={350}\n                height={250}\n                url={props.randomActivity.video}\n              />\n            </div>}\n            </div>\n            <p className=\"content\">{\n               props.randomActivity.podcast_name\n            || props.randomActivity.artist\n            || props.randomActivity.title \n            || \"more information comming up soon\"\n            }</p>\n            {props.randomActivity.episode_count && <p className=\"content\">{props.randomActivity.episode_count } episodes</p>}\n            {props.randomActivity.average_time && <h4 className=\"title\">Average play time</h4>}\n            {props.randomActivity.average_time && <p className=\"content\">{props.randomActivity.average_time}</p>}\n            {props.randomActivity.materials && <h4 className=\"title\">Materials</h4>}\n            {props.randomActivity.materials && <p className=\"content\">{props.randomActivity.materials}</p>}\n            {props.randomActivity.imdb_rating && <h4 className=\"title\">Imdb Raiting</h4>}\n            {props.randomActivity.imdb_rating && <p className=\"content\">{props.randomActivity.imdb_rating || 0}</p>}\n            {props.randomActivity.content_rating&& <h4 className=\"title\">Content</h4>}\n            {props.randomActivity.content_rating && <p className=\"content\">{props.randomActivity.content_rating|| 0}</p>}\n            {props.randomActivity.album_url && <h4 className=\"title\">Listen here</h4>}\n            {props.randomActivity.album_url && <a className=\"content\" href={props.randomActivity.album_url}> Click Here</a>}\n            {props.randomActivity.author && <h4 className=\"title\">Author</h4>}\n            {props.randomActivity.author && <p >{props.randomActivity.author}</p>}\n          </div>\n          <div className=\"info activity-more-info\">\n            <h1 className=\"\">A little bit about me</h1>\n            {props.randomActivity.brief_description && <p className=\"content\">{props.randomActivity.brief_description || props.randomActivity.brief_description}</p>}\n            {props.randomActivity.description && <p className=\"content\">{props.randomActivity.description}</p>}\n            {props.randomActivity.artist && <h3 className=\"title\">Artis name</h3>}\n            {props.randomActivity.artist  && <p className=\"content\">{props.randomActivity.artist}</p>}\n            {props.randomActivity.podcast_name && <h3 className=\"title\">Podcast name</h3>}\n            {props.randomActivity.podcast_name  && <p className=\"content\">{props.randomActivity.podcast_name}</p>}\n          </div>\n          <div className=\"info activity-more-more-info\">\n            {props.randomActivity.instructions &&<h1 className=\"\">intructions</h1>}\n            {props.randomActivity.instructions && <p className=\"content\">{props.randomActivity.instructions }</p>}\n            {props.randomActivity.type && <h3 className=\"title\">Type</h3>}\n            {props.randomActivity.type && <p className=\"content\">{props.randomActivity.type}</p>}\n            {props.randomActivity.album_title && <h3 className=\"title\">Album title</h3>}\n            {props.randomActivity.album_title  && <p className=\"content\">{props.randomActivity.album_title}</p>}\n          </div>\n          <div className=\"info activity-more-more-more-info\">\n            {props.randomActivity.genre && <h3 className=\"title\">Genre</h3>}\n            {props.randomActivity.genre  && <p className=\"content\">{props.randomActivity.genre}</p>}\n            {props.randomActivity.release_date && <h3 className=\"title\">Release date</h3>}\n            {props.randomActivity.release_date  && <p className=\"content\">{moment(props.randomActivity.release_date).format('LL')}</p>}   \n          </div>\n          <div className=\"info enjoy-it\">\n            <h1 className=\"\">Enjoy it!</h1>\n          </div>\n        </div>\n    )\n}\n\nDetailsPage.propTypes = {\n  name: PropTypes.object.isRequired,\n  randomActivity: PropTypes.object.isRequired\n}\n","import './App.scss';\nimport { Homepage } from '../HomePage/Homepage';\nimport { Form } from '../Form/Form';\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { BrowsePage } from '../BrowsePage/BrowsePage';\nimport { Footer } from '../Footer/Footer';\nimport { ResultPage } from '../ResultPage/ResultPage';\nimport { DetailsPage } from '../DetailPage/DetailsPage';\nimport { getAllMovies, \n  getAllPodcasts, \n  getAllCardGames, \n  getAllMusic, \n  getAllBoardGames} \n  from '../../apiCalls.js';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      history: [],\n      activities: [],\n      musicAnswers: [],\n      moviesAnswers: [],\n      podcastsAnswers: [],\n      boardGamesAnswers: [],\n      cardGamesAnswers: [],\n      possibleSuggestions: [],\n      randomActivity: {},\n      movies: [],\n      music: [],\n      podcasts: [],\n      boardGames: [],\n      cardGames: [],\n      error: ''\n    };\n  this.baseState = this.state\n  }\n\n  getActivityData = async (name) => {\n    if (name.target) {\n      name = name.target.id;\n    }\n    if (name.includes(\"games\")) {\n      name = name.replace(/ games/gi, \"Games\");\n    }\n    let promise;\n    try {\n      if (name === \"movies\") {\n        promise = await getAllMovies();\n      }\n      if (name === \"boardGames\") {\n        promise = await getAllBoardGames();\n      }\n      if (name === \"cardGames\") {\n        promise = await getAllCardGames();\n      }\n      if (name === \"music\") {\n        promise = await getAllMusic();\n      }\n      if (name === \"podcasts\") {\n        promise = await getAllPodcasts();\n      }\n      this.setState({ [name]: promise });\n    } catch (error) {\n      console.log(error)\n      this.setState({error})\n    }\n  };\n\n  resetState = ()=>{\n    this.setState(this.baseState)\n  }\n  setHistory = () =>{\n    this.setState({\n      history:[...this.state.history, this.state],\n    })\n  }\n  goBack = ()=>{\n    this.setState(this.state.history[this.state.history.length - 1])\n  }\n\n  updateActivityAnswers = (event) => {\n    if (event.target.id !== \"default\") {\n      this.setState({\n        [event.target.id]: [\n          ...this.state[event.target.id],\n          event.target.textContent,\n        ],\n      });\n    }\n  };\n\n  setActivities = (activities) => {\n    activities.forEach((activity) => {\n      this.getActivityData(activity);\n    });\n    this.setState({ activities: [...activities] });\n  };\n\n  determineRandomActivity = () => {\n    let allFilteredActivities = this.state.activities.reduce(\n      (filtered, activity) => {\n        if (activity.includes(\"games\")) {\n          activity = activity.replace(/ games/gi, \"Games\");\n        }\n        let filteredActivities = this.filterActivity(\n          activity,\n          this.state[`${activity}Answers`]\n        );\n        filtered.push(filteredActivities);\n        return filtered;\n      },\n      []\n    );\n    let final = allFilteredActivities.flat();\n    let randomNumber = Math.floor(Math.random() * final.length);\n    this.setState({randomActivity:  final[randomNumber]})\n    return final[randomNumber]\n  };\n\n  genreFilter = (activity, answers) => {\n    return this.state[activity].filter((singleActivity) => {\n      if (activity === \"movies\") {\n        return singleActivity.genre.some((genre) => answers.includes(genre));\n      }\n      return answers.some((genre) => genre === singleActivity.genre);\n    });\n  };\n\n  ageFilter = (possibleSuggestions, answers) => {\n    let ageRestriction = answers.find((answer) => {\n      return answer.includes(\"0's\");\n    });\n    if (ageRestriction) {\n      return possibleSuggestions.filter((element) => {\n        return (\n          element.release_date.split(\"-\")[0] > ageRestriction.split(\"'s\")[0]\n        );\n      });\n    }\n    return possibleSuggestions\n  };\n\n  movieFilter = (possibleSuggestions, answers) => {\n    if (answers.includes(\"too long\")) {\n      return possibleSuggestions.filter((element) => {\n        return +element.runtime < 120;\n      });\n    }\n    if (answers.includes(\"that's fine\")) {\n      return possibleSuggestions;\n    }\n  };\n\n  gameFilter = (activity, answers) => {\n    let possibleSuggestions = this.state[activity];\n    const choices = [\"1\", \"2\", \"3\", \"4\", \"5\", \"more than 5\"];\n    let numberOfPlayers = choices.find((choice) => {\n      return answers.includes(choice);\n    });\n    return possibleSuggestions.filter((element) => {\n      if (numberOfPlayers === \"more than 5\") {\n        return element.max_players >= 5;\n      }\n      return (\n        element.min_players <= numberOfPlayers &&\n        element.max_players >= numberOfPlayers\n      );\n    });\n  };\n\n  filterActivity = (activity, answers) => {\n    let genreGroup = [\"movies\", \"podcasts\", \"music\"];\n    let gamesGroup = [\"boardGames\", \"cardGames\"];\n    let ageGroup = [\"movies\", \"music\"];\n    let possibleSuggestions;\n\n    if (genreGroup.includes(activity)) {\n      possibleSuggestions = this.genreFilter(activity, answers);\n    }\n    if (ageGroup.includes(activity)) {\n      possibleSuggestions = this.ageFilter(possibleSuggestions, answers);\n    }\n    if (activity === \"movies\") {\n      possibleSuggestions = this.movieFilter(possibleSuggestions, answers);\n    }\n    if (gamesGroup.includes(activity)) {\n      if (this.state.cardGames && this.state.boardGames && activity === \"boardGames\"){\n        answers = this.state.cardGamesAnswers\n      }\n      possibleSuggestions = this.gameFilter(activity, answers);\n    }\n    this.setState({possibleSuggestions: possibleSuggestions})\n    return possibleSuggestions\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path='/'>\n            <Homepage\n              getActivityData={this.getActivityData}\n              allMovies={this.state.movies}\n            />\n          </Route>\n          <Route exact path=\"/form\"\n            render={( {history} ) => {\n              return (\n                <Form\n                  route={history}\n                  goBack={this.goBack}\n                  setHistory={this.setHistory}\n                  resetState={this.resetState}\n                  activities={this.state.activities}\n                  setActivities={this.setActivities}\n                  updateActivityAnswers={this.updateActivityAnswers}\n                  determineRandomActivity={this.determineRandomActivity}\n                />\n              );\n            }}\n          ></Route>\n\n          <Route exact\n            path=\"/:activity\"\n            render={({ match }) => {\n              return (\n                <BrowsePage\n                  name={match.params.activity}\n                  data={this.state[match.params.activity]}\n                />\n              );\n            }}\n          ></Route>\n          <Route\n            exact \n            path={this.state.randomActivity ? '/:activity/:results': '/form'}\n            render={({match}) => {\n              return <ResultPage \n                name={match.params}\n                data={this.state.possibleSuggestions}\n                randomActivity={this.state.randomActivity}\n                determineRandomActivity={this.determineRandomActivity}\n                error={this.state.error}\n              />\n            }}>\n          </Route>\n          <Route\n            exact \n            path='/about/:activity/:details'\n            render={({match}) => {\n              return <DetailsPage\n                name={match.params}\n                randomActivity={this.state.randomActivity}\n              />\n            }}>\n          </Route>\n          <Route\n            path='/*'>\n            <h1 className=\"error\">Oops, something went wrong...</h1>\n          </Route>\n         </Switch>\n        <Footer />\n      </div >\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter><App /></BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}